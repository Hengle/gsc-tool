lexer grammar GscLexer;

// LEXER RULES
HASH: '#';
DEVBEGIN: '/#';
DEVEND: '#/';
INLINE: '#inline';
INCLUDE: '#include';
USINGTREE: '#using_animtree';
ANIMTREE: '#animtree';
ENDON: 'endon';
NOTIFY: 'notify';
WAIT: 'wait';
WAITTILL: 'waittill';
WAITTILLMATCH: 'waittillmatch';
WAITTILLFRAMEEND: 'waittillframeend';
WAITFRAME: 'waitframe';
IF: 'if';
ELSE: 'else';
DO: 'do';
WHILE: 'while';
FOR: 'for';
FOREACH: 'foreach';
IN: 'in';
SWITCH: 'switch';
CASE: 'case';
DEFAULT: 'default';
BREAK: 'break';
CONTINUE: 'continue';
RETURN: 'return';
BREAKPOINT: 'breakpoint';
PROFBEGIN: 'prof_begin';
PROFEND: 'prof_end';
ASSERT: 'assert';
ASSERTEX: 'assertex';
ASSERTMSG: 'assertmsg';
THREAD: 'thread';
CHILDTHREAD: 'childthread';
THISTHREAD: 'thisthread';
CALL: 'call';
TRUE: 'true';
FALSE: 'false';
UNDEFINED: 'undefined';
SIZE: 'size';
GAME: 'game';
SELF: 'self';
ANIM: 'anim';
LEVEL: 'level';
ISDEFINED: 'isdefined';
ISTRUE: 'istrue';
LPAREN: '(';
RPAREN: ')';
LBRACE: '{';
RBRACE: '}';
LBRACKET: '[';
RBRACKET: ']';
COMMA: ',';
DOT: '.';
DOUBLEDOT: '..';
ELLIPSIS: '...';
DOUBLECOLON: '::';
COLON: ':';
SEMICOLON: ';';
QMARK: '?';
INCREMENT: '++';
DECREMENT: '--';
LSHIFT: '<<';
RSHIFT: '>>';
OR: '||';
AND: '&&';
EQUALITY: '==';
INEQUALITY: '!=';
LESS_EQUAL: '<=';
GREATER_EQUAL: '>=';
LESS: '<';
GREATER: '>';
NOT: '!';
COMPLEMENT: '~';
ASSIGN: '=';
AMUL: '*=';
ADIV: '/=';
AMOD: '%=';
AADD: '+=';
ASUB: '-=';
ARSH: '>>=';
ALSH: '<<=';
ABWOR: '|=';
ABWXOR: '^=';
ABWAND: '&=';
BW_OR: '|';
BW_XOR: '^';
BW_AND: '&';
ADD: '+';
SUB: '-';
MUL: '*';
DIV: '/';
MOD: '%';
FLOAT: [0-9]+ '.' [0-9]* 'f'?;
INTEGER: [0-9]+;  
STRING: '"' (~["\\] | '\\' .)* '"';
ISTRING: '&"' (~["\\] | '\\' .)* '"';  
HSTRING: '#d' (~["\\] | '\\' .)* '"';
IDENTIFIER: [a-zA-Z_][a-zA-Z_0-9]*;
PATH: IDENTIFIER ( '\\' IDENTIFIER )+;
WHITESPACE: [ \t\n\r\f]+ -> skip;
LINE_COMMENT: '//' ~[\r\n]* -> skip;
BLOCK_COMMENT: '/*' .*? '*/' -> skip;
GSCDOC_COMMENT: '/@' .*? '@/' -> skip;

mode T6;
AUTOEXEC: 'autoexec';
CODECALL: 'codecall';
PRIVATE: 'private';
CONST: 'const';
WAITREALTIME: 'waitrealtime';
GETNEXTARRAYKEY: 'getnextarraykey';
GETFIRSTARRAYKEY: 'getfirstarraykey';
GETDVARCOLORALPHA: 'getdvarcoloralpha';
GETDVARCOLORBLUE: 'getdvarcolorblue';
GETDVARCOLORGREEN: 'getdvarcolorgreen';
GETDVARCOLORRED: 'getdvarcolorred';
GETDVARVECTOR: 'getdvarvector';
GETDVARFLOAT: 'getdvarfloat';
GETDVARINT: 'getdvarint';
GETDVAR: 'getdvar';
GETTIME: 'gettime';
ABS: 'abs';
VECTORTOANGLES: 'vectortoangles';
ANGLECLAMP180: 'angleclamp180';
ANGLESTOFORWARD: 'anglestoforward';
ANGLESTORIGHT: 'anglestoright';
ANGLESTOUP: 'anglestoup';
VECTORSCALE: 'vectorscale';
// HSTRING: '#' (~["\\] | '\\' .)* '"';

mode T7_T8_T9;
INSERT: '#insert';
USING: '#using';
CLASS: 'class';
VAR: 'var';
CONSTRUCTOR: 'constructor';
DESTRUCTOR: 'destructor';
NAMESPACE: 'namespace';
INLINE_FLAG: 'inline';
ARROW: '->';
NEW: 'new';
// superequals: '==='; notsuper: '!==';